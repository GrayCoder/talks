Docker Brownbag
5 Aug 2015

Patrick Gray
DevOps

* What is Docker?
.image images/docker-friends.png 250 _
*Intuitively*
A way to script the installation and setup of your application into a single machine that runs only your app/service.

*Technically*
An opinionated container tool built in Go atop kernel cgroups and namespaces.

* Dockerfiles
FROM nfnty/arch-mini

ENV GOPATH /go
ENV GOROOT /usr/lib/go
ENV PATH $PATH:/go/bin

RUN pacman -Syu \
&& pacman --noconfirm -S git go mercurial \
&& mkdir -p /go/bin \
&& go get code.google.com/p/go.tools/cmd/present \
&& git clone https://github.com/GrayCoder/talks.git /talk

WORKDIR /talk

EXPOSE 8080
ENTRYPOINT /go/bin/present -http="$(head -1 /etc/hosts | awk '{print $1}'):8080"

* Networking
.image images/netwerk.jpg _ 400

*Intuitively*
Host or Container IP, and PORT, provide connection to ports on container exposed via Dockerfile "EXPOSE"

*Technically*
A really hard problem that people are still figuring out. Docker (the company) recently acquired a cloud networking startup called Socketplane and rewrote the networking stack.

* Storage
.image images/cow.jpg _ 400
*Intuitively*
It's a diff filesystem and creates a new diff for every write to the file system

*Technically*
Docker uses COW (Copy On Write) filesystems to back its containers. These can be switched in and out based on preference, but comes with AUFS by default.

* CLI
*Intuitively*
The command you have to use to interface with the Docker daemon.

*Technically*
Just one of many possible clients that can exercise the Docker API.

* Miscellaneous
*boot2docker*

*Version*pinning*

*Dockerfile*per*project*

*CoreOS/RancherOS/Native*Docker*OSes*

*The*Scratch*Container*

*Links*

.link https://www.kernel.org/doc/Documentation/cgroups/cgroups.txt
.link https://lwn.net/Articles/531114
